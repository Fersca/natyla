{"name":"Natyla - Startup's Best Friend","tagline":"Natyla is a Full-Stack REST-API/Cache/Key-Value-Store application to configure and run simple APIs in minutes. Written in Golang, it provides the same functionality as a API multithreaded application running with Memcached and MongoDB.","body":"![alt tag](https://github.com/Fersca/natyla/blob/master/logoNatyla.png?raw=true)\r\n\r\n### Need to create an API in 3 minutes?\r\n\r\n  - Download natyla.\r\n  - Start it.\r\n  - POST your information in JSON format.\r\n  - Share the resource URL.\r\n  - Done. Be Happy :)\r\n\r\n## Install and Run\r\n\r\nJust clone this repository, install [golang](http://golang.org/) and run:\r\n\r\n~~~\r\n$ go get github.com/Fersca/natyla \r\n$ cd $GOPATH/src/github.com/Fersca/natyla\r\n$ go run natyla.go\r\n~~~\r\n\r\nIt will start Natyla with the default configuration:\r\n  - 10MB memory cache.\r\n  - \"adminToken\" as default token for admin access to PUT/POST/DELETE.\r\n  - $CURRENT_DIR/data as default directory for storing resources and JSON Objects. \r\n\r\n~~~\r\nStarting Natyla...\r\nCore numbers:  4\r\nCan't found 'config.json' using default parameters\r\nUsing Config: map[token:adminToken memory:10485760]\r\nMax memory defined as:  10  Mbytes\r\nReady.\r\n-------------------------------\r\n~~~\r\n\r\n## Custom Config\r\n\r\nYou can create (or use the example) a config file called config.json, where you can setup a custom configuration.\r\n~~~\r\n{\r\n    \"token\":\"customToken\",\r\n    \"cache\":false,\r\n    \"memory\":10485760,\r\n    \"data_dir\":\"myDir\",\r\n    \"api_port\":\"8080\",\r\n    \"telnet_port\":\"8081\",\r\n    \"print_log\":true\r\n}\r\n~~~\r\n\r\n## Using Natyla RESTful API\r\n\r\nNatyla provides a RESTful API to read, update and store JSON resources.\r\n\r\n### Create a resource (POST, PUT)\r\n\r\nTo create a resource (a Person), just POST or PUT the JSON object to the specific resource:\r\n\r\n~~~\r\ncurl -X POST localhost:8080/person -d '{\"id\":123456,\"name\":\"Ferdinand\", \"age\":32,\"profession\":\"engineer\"}'\r\n~~~\r\n\r\n**You Always have to provide an \"id\" field**\r\n\r\n### Read a resource (GET)\r\n\r\nIf you want to read a resource, just call the API with the resource ID:\r\n\r\n~~~\r\ncurl localhost:8080/person/123456\r\n~~~\r\n\r\nYou will get the Stored JSON:\r\n\r\n~~~\r\n{\"id\":123456,\"name\":\"Ferdinand\", \"age\":32,\"profession\":\"engineer\"}\r\n~~~\r\n\r\nIf you are curious, you will notice that Natyla stored the JSON resource under you \"data\" directory.\r\nThe previous example will save the JSON (in plain text) in the following file: \r\n\r\n~~~\r\ndata/person/123456.json\r\n~~~\r\n\r\n### Delete a resource (DELETE)\r\n\r\nTo delete a resource, just DELETE it indicating the Object ID:\r\n\r\n~~~\r\ncurl -X DELETE localhost:8080/person/123456\r\n~~~\r\n\r\n### Multiget **(Future)**\r\n\r\nIn the near future you will be able to request several resources at the same time. Eg:\r\n\r\n~~~\r\ncurl localhost:8080/person?ids=123456,789101\r\n~~~\r\nYou will receive:\r\n~~~\r\n[\r\n  {\"id\":123456, \"name\":\"Ferdinand\", \"age\":32, \"profession\":\"engineer\"},\r\n  {\"id\":789101, \"name\":\"Norbert\",   \"age\":57, \"profession\":\"engineer\"}\r\n]\r\n~~~\r\n\r\n## Searching\r\n\r\nIf you want to search for a particular value in a resource field, you should use the \"search\" feature from Natyla.\r\n\r\nE.g. Assume you have the following \"Person\" resources:\r\n\r\n~~~\r\n[\r\n  {\"id\":123456, \"name\":\"Ferdinand\", \"age\":32, \"profession\":\"engineer\"},\r\n  {\"id\":123456, \"name\":\"Andrea\",    \"age\":26, \"profession\":\"designer\"},\r\n  {\"id\":789012, \"name\":\"Argandas\",  \"age\":25, \"profession\":\"engineer\"}\r\n]\r\n~~~\r\nWich are located on:\r\n~~~\r\nlocalhost:8080/person\r\n~~~\r\nAnd you want to search for all the \"engineers\" in the \"Person\" resource, just call:\r\n~~~\r\ncurl localhost:8080/person/search?field=profession&equal=engineer\r\n~~~\r\nor\r\n~~~\r\ncurl localhost:8080/person?profession=engineer\r\n~~~\r\nAnd you will get an array of resources that satisfies the query:\r\n~~~\r\n[\r\n  {\"id\":123456,\"name\":\"Ferdinand\", \"age\":32,\"profession\":\"engineer\"},\r\n  {\"id\":789012,\"name\":\"Argandas\",  \"age\":25,\"profession\":\"engineer\"}\r\n]\r\n~~~\r\nEven you can search multiple fields to refine your search, doing as follow:\r\n~~~\r\ncurl localhost:8080/person?profession=engineer&age=32\r\n~~~\r\nWill return an array of resources that satisfies the query:\r\n~~~\r\n[\r\n  {\"id\":123456,\"name\":\"Ferdinand\", \"age\":32,\"profession\":\"engineer\"}\r\n]\r\n~~~\r\n\r\n**TODO:**\r\nIn the near future you will be able to do \"like\", \"or\", \"greater than\", etc. operations on several fields\r\n\r\n## Caching\r\n\r\nIf you keep the caching enabled (default) Natyla will use a 10MB (default) memory cache to store the most used recources. If you reach the max defined amount of memory, Natyla will only cache the resource metadata (but not the resource content) it prevents (for example) invalid disk access for not previously cached DELETES. To disable cache, just add \"cache\":false in the config file.\r\n\r\n## Formatting\r\n\r\nNatyla provides a pretty printing format if you GET any resource from a browser. It allows you to interact with your API resources in a friendly way :)\r\n\r\n## Notifications\r\n\r\n**TODO:**\r\nNatyla is not providing a notification system by now, but it will. The idea is the following: If you want to be notified when a resource changes, you will be able to register your callback URL and Natyla will notify you with a JSON POST. The second notification system will able you to listen to a socket stream and receive the same notifications while you are connected to the channel.\r\n\r\n## Telnet Administration\r\n\r\nYou can manage Natyla by doing a telnet to port 8081. Just type \"help\" and you will see how to check the memory usage, interact with the resources, etc.\r\n\r\n## Want to Help?\r\n\r\n![alt tag](https://github.com/Fersca/natyla/blob/gh-pages/images/go.png?raw=true)\r\n\r\nNatyla API needs the help of the world best Golang Developers to improve its functionality!!! if you are interested just send a twitter message or start adding code to the repo! just try to follow the project backlog :) Thanks!!\r\n\r\n[Backlog](https://github.com/Fersca/natyla/blob/master/Backlog.txt)","google":"UA-53201155-1","note":"Don't delete this file! It's used internally to help with page regeneration."}